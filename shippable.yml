language: java

jdk:
  - oraclejdk8

env:
  global:
    # replace with your docker registry account name (e.g. Amazon ECR)
    - DOCKER_ACC=288971733297.dkr.ecr.us-east-1.amazonaws.com
    - DOCKER_REPO=shipdemo-java-ecr-eb

build:
  # option to specify specific boot image
  pre_ci_boot:
    image_name: drydock/u14
    image_tag: tip
    pull: true
    options: '--privileged=true --net=bridge'
  ci:
    # install specific Maven version
    - sudo wget http://www-us.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
    - sudo tar xzf apache-maven-3.3.9-bin.tar.gz -C /usr/local && rm -f apache-maven-3.3.9-bin.tar.gz
    - ln -fs /usr/local/apache-maven-$3.3.9/bin/mvn /usr/bin
    - echo "export PATH=$PATH:/usr/local/apache-maven-3.3.9/bin" >> $HOME/.bashrc
    # create directories for testresults and codecoverage output
    - mkdir -p shippable/testresults && mkdir -p shippable/codecoverage
    # build using Maven
    - /usr/local/apache-maven-3.3.9/bin/mvn -q -B clean cobertura:cobertura install
    - ls -al $SHIPPABLE_BUILD_DIR/target
    # build docker image and push to registry
    - docker build -t $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER .
    - docker push $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER

  on_success:
    # save latest image version to state
    - echo versionName=$BRANCH.$BUILD_NUMBER > /build/state/demo_java_ecr_img.env

integrations:
  hub:
    - integrationName: ttrahan-ecr
      type: ecr
